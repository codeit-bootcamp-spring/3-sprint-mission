info:
  app:
    name: Discodeit
    version: 1.7.0
    java: 17
    spring-boot-version: 3.4.0
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit
    driver-class-name: org.postgresql.Driver
  storage:
    type: local
    path: /data/discodeit/storage
  multipart:
    max-file-size: 10MB
    max-request-size: 30MB
  jpa:
    ddl-auto: validate
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
#  prometheus:
#    metrics:
#      export:
#        enabled: true  # 프로메테우스 메트릭 활성화
#  metrics:
#    tags:
#      application: Discodeit # 메트릭 태그 추가

server:
  port: ${PORT:8080}
  address: 0.0.0.0

spring:
  application:
    name: discodeit
  sql.init.mode: always
  profiles:
    active: dev
  servlet:
    multipart:
      maxFileSize: 10MB # 파일 하나의 최대 크기
      maxRequestSize: 30MB  # 한 번에 최대 업로드 가능 용량


  # DB 접속 정보
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit
    username: discodeit_user
    password: discodeit1234
    driver-class-name: org.postgresql.Driver

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 100
        default_schema: discodeit
    open-in-view: false
  boot:
    admin:
      client:
        instance:
          name: discodeit

logging:
  level:
    root: info

discodeit:
  storage:
    type: local
    local:
      root-path: ${user.dir}/data/discodeit/storage

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, loggers
      base-path: /actuator
  endpoint:
    health:
      # 상태 상세 정보 출력 여부 (never, when-authorized, always)
      # 추후 never로 수정
      show-details: never
      show-components: never
  info:
    env:
      enabled: true             # info 엔드포인트 명시적 활성화
