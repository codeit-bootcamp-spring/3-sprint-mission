2025-06-20 00:10:39.426 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 26264 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:10:39.428 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:10:40.725 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:10:40.727 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:10:40.727 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:10:40.763 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:10:45.950 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-06-20 00:10:45.954 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - The connection attempt failed.
2025-06-20 00:10:45.956 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [The connection attempt failed.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
Caused by: java.net.UnknownHostException: prod-db-host
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:572)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:260)
	at org.postgresql.core.PGStream.<init>(PGStream.java:121)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)
	... 49 common frames omitted
2025-06-20 00:10:45.962 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-06-20 00:10:45.963 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-06-20 00:10:45.971 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:10:46.003 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 15 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 30 common frames omitted
2025-06-20 00:13:59.635 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 11528 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:13:59.637 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:14:01.138 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:14:01.139 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:14:01.139 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:14:01.172 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:14:06.305 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-06-20 00:14:06.307 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - The connection attempt failed.
2025-06-20 00:14:06.308 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [The connection attempt failed.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:364)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
Caused by: java.net.UnknownHostException: prod-db-host
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:572)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:260)
	at org.postgresql.core.PGStream.<init>(PGStream.java:121)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)
	... 49 common frames omitted
2025-06-20 00:14:06.311 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-06-20 00:14:06.312 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-06-20 00:14:06.317 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:14:06.345 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 15 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 30 common frames omitted
2025-06-20 00:14:52.735 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 20596 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:14:52.738 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:14:54.129 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:14:54.131 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:14:54.131 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:14:54.175 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:14:55.589 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:14:55.590 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:14:55.600 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:14:55.640 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:431)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 15 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:136)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:46)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:99)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:77)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:289)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	... 19 common frames omitted
2025-06-20 00:25:25.590 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 24392 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:25:25.591 [main] DEBUG c.s.m.discodeit.DiscodeitApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-20 00:25:25.592 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "dev"
2025-06-20 00:25:26.168 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-20 00:25:26.264 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 6 JPA repository interfaces.
2025-06-20 00:25:26.902 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-20 00:25:26.909 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-20 00:25:26.910 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:25:26.910 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:25:26.943 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:25:26.943 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1323 ms
2025-06-20 00:25:26.946 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties': Could not bind properties to 'H2ConsoleProperties' : prefix=spring.h2.console, ignoreInvalidFields=false, ignoreUnknownFields=true
2025-06-20 00:25:26.962 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:25:26.969 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-06-20 00:25:26.975 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-06-20 00:25:26.986 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'spring.h2.console' to org.springframework.boot.autoconfigure.h2.H2ConsoleProperties:

    Property: spring.h2.console.path
    Value: "/"
    Origin: class path resource [application-dev.yaml] - 23:13
    Reason: java.lang.IllegalArgumentException: Path must have length greater than 1

Action:

Update your application's configuration

2025-06-20 00:29:22.645 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 6528 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:29:22.646 [main] DEBUG c.s.m.discodeit.DiscodeitApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-20 00:29:22.647 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "dev"
2025-06-20 00:29:23.225 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-20 00:29:23.360 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 6 JPA repository interfaces.
2025-06-20 00:29:23.868 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-20 00:29:23.875 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-20 00:29:23.876 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:29:23.877 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:29:23.913 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:29:23.913 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1235 ms
2025-06-20 00:29:23.969 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@63947c6b
2025-06-20 00:29:23.992 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................none
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............none
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................none
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none
2025-06-20 00:29:23.993 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................."org.h2.Driver"
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName......none
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:h2:mem:discodeit;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime...................0
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................10
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................none
2025-06-20 00:29:23.997 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................"HikariPool-1"
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema..........................none
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................internal
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............default
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................"sa"
2025-06-20 00:29:23.998 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............5000
2025-06-20 00:29:23.999 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-20 00:29:24.145 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.148 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-20 00:29:24.214 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-06-20 00:29:24.244 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-20 00:29:24.254 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-06-20 00:29:24.256 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.282 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-20 00:29:24.302 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-06-20 00:29:24.302 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.304 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-20 00:29:24.333 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-06-20 00:29:24.333 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.364 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-06-20 00:29:24.364 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.395 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-06-20 00:29:24.395 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.427 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-06-20 00:29:24.427 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.459 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-06-20 00:29:24.460 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.483 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-20 00:29:24.505 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=8, active=1, idle=7, waiting=0)
2025-06-20 00:29:24.505 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.514 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-20 00:29:24.525 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-20 00:29:24.536 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-06-20 00:29:24.536 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:29:24.568 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:29:25.130 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-20 00:29:25.138 [main] DEBUG org.hibernate.SQL - 
    drop table if exists binary_contents cascade 
2025-06-20 00:29:25.140 [main] DEBUG org.hibernate.SQL - 
    drop table if exists channels cascade 
2025-06-20 00:29:25.140 [main] DEBUG org.hibernate.SQL - 
    drop table if exists message_attachments cascade 
2025-06-20 00:29:25.140 [main] DEBUG org.hibernate.SQL - 
    drop table if exists messages cascade 
2025-06-20 00:29:25.141 [main] DEBUG org.hibernate.SQL - 
    drop table if exists read_statuses cascade 
2025-06-20 00:29:25.141 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_statuses cascade 
2025-06-20 00:29:25.142 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-20 00:29:25.150 [main] DEBUG org.hibernate.SQL - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(225) not null,
        primary key (id)
    )
2025-06-20 00:29:25.152 [main] DEBUG org.hibernate.SQL - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
2025-06-20 00:29:25.153 [main] DEBUG org.hibernate.SQL - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
2025-06-20 00:29:25.153 [main] DEBUG org.hibernate.SQL - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
2025-06-20 00:29:25.154 [main] DEBUG org.hibernate.SQL - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null unique,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id),
        unique (user_id, channel_id)
    )
2025-06-20 00:29:25.155 [main] DEBUG org.hibernate.SQL - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
2025-06-20 00:29:25.155 [main] DEBUG org.hibernate.SQL - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
2025-06-20 00:29:25.156 [main] DEBUG org.hibernate.SQL - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
2025-06-20 00:29:25.157 [main] DEBUG org.hibernate.SQL - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
2025-06-20 00:29:25.158 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
2025-06-20 00:29:25.158 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
2025-06-20 00:29:25.159 [main] DEBUG org.hibernate.SQL - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
2025-06-20 00:29:25.160 [main] DEBUG org.hibernate.SQL - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
2025-06-20 00:29:25.160 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
2025-06-20 00:29:25.161 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
2025-06-20 00:29:25.164 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-20 00:29:25.864 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-20 00:29:25.883 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-20 00:29:25.906 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.AuthController:
	{POST [/api/auth/login]}: login(LoginRequest)
2025-06-20 00:29:25.912 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.BinaryContentController:
	{GET [/api/binaryContents/{binaryContentId}]}: find(UUID)
	{GET [/api/binaryContents/{binaryContentId}/download]}: download(UUID)
	{GET [/api/binaryContents]}: findAllByIdIn(List)
2025-06-20 00:29:25.918 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.ChannelController:
	{PATCH [/api/channels/{channelId}]}: update(UUID,PublicChannelUpdateRequest)
	{DELETE [/api/channels/{channelId}]}: delete(UUID)
	{POST [/api/channels/public]}: create(PublicChannelCreateRequest)
	{POST [/api/channels/private]}: create(PrivateChannelCreateRequest)
	{GET [/api/channels]}: findAll(UUID)
2025-06-20 00:29:25.921 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.MessageController:
	{PATCH [/api/messages/{messageId}]}: update(UUID,MessageUpdateRequest)
	{DELETE [/api/messages/{messageId}]}: delete(UUID)
	{POST [/api/messages], consumes [multipart/form-data]}: create(MessageCreateRequest,List)
	{GET [/api/messages]}: findAllByChannelId(UUID,Instant,Pageable)
2025-06-20 00:29:25.924 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.ReadStatusController:
	{PATCH [/api/readStatuses/{readStatusId}]}: update(UUID,ReadStatusUpdateRequest)
	{POST [/api/readStatuses]}: create(ReadStatusCreateRequest)
	{GET [/api/readStatuses]}: findAllByUserId(UUID)
2025-06-20 00:29:25.927 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.UserController:
	{PATCH [/api/users/{userId}], consumes [multipart/form-data]}: update(UUID,UserUpdateRequest,MultipartFile)
	{DELETE [/api/users/{userId}]}: delete(UUID)
	{POST [/api/users], consumes [multipart/form-data]}: create(UserCreateRequest,MultipartFile)
	{GET [/api/users]}: findAll()
	{PATCH [/api/users/{userId}/userStatus]}: updateUserStatusByUserId(UUID,UserStatusUpdateRequest)
2025-06-20 00:29:25.931 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-06-20 00:29:25.939 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.a.OpenApiWebMvcResource:
	{GET [/v3/api-docs], produces [application/json]}: openapiJson(HttpServletRequest,String,Locale)
	{GET [/v3/api-docs.yaml], produces [application/vnd.oai.openapi]}: openapiYaml(HttpServletRequest,String,Locale)
2025-06-20 00:29:25.941 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerWelcomeWebMvc:
	{GET [/swagger-ui.html]}: redirectToUi(HttpServletRequest)
2025-06-20 00:29:25.942 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerConfigResource:
	{GET [/v3/api-docs/swagger-config], produces [application/json]}: openapiJson(HttpServletRequest)
2025-06-20 00:29:25.944 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-06-20 00:29:25.963 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-06-20 00:29:26.053 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /swagger-ui*/*swagger-initializer.js=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /swagger-ui*/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]}
2025-06-20 00:29:26.085 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-20 00:29:26.131 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-20 00:29:26.241 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:discodeit'
2025-06-20 00:29:26.303 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-20 00:29:26.321 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-20 00:29:26.334 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Started DiscodeitApplication in 4.122 seconds (process running for 4.527)
2025-06-20 00:29:54.257 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:29:54.257 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:30:24.260 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:30:24.260 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:30:54.274 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:30:54.275 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:31:24.286 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:31:24.286 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:31:54.302 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:31:54.303 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:32:24.312 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:32:24.313 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:32:54.320 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:32:54.320 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:33:24.327 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:33:24.327 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:33:46.414 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-20 00:33:46.474 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-20 00:33:46.479 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-20 00:33:46.480 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists binary_contents cascade 
2025-06-20 00:33:46.480 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists channels cascade 
2025-06-20 00:33:46.481 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists message_attachments cascade 
2025-06-20 00:33:46.482 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists messages cascade 
2025-06-20 00:33:46.483 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists read_statuses cascade 
2025-06-20 00:33:46.485 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_statuses cascade 
2025-06-20 00:33:46.486 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-20 00:33:46.489 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-20 00:33:46.489 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:33:46.489 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.489 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.489 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.489 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:33:46.490 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-06-20 00:33:46.490 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-20 00:33:48.514 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 27864 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:33:48.515 [main] DEBUG c.s.m.discodeit.DiscodeitApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-06-20 00:33:48.515 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "dev"
2025-06-20 00:33:49.230 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-20 00:33:49.292 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 6 JPA repository interfaces.
2025-06-20 00:33:49.751 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-20 00:33:49.759 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-20 00:33:49.760 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:33:49.760 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:33:49.793 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:33:49.793 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1250 ms
2025-06-20 00:33:49.843 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@63947c6b
2025-06-20 00:33:49.866 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................none
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............none
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............none
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............30000
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................none
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............none
2025-06-20 00:33:49.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................."org.h2.Driver"
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName......none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout.......1
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:h2:mem:discodeit;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime...................0
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................10
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory...........none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................"HikariPool-1"
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor...............none
2025-06-20 00:33:49.868 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema..........................none
2025-06-20 00:33:49.869 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................internal
2025-06-20 00:33:49.869 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............default
2025-06-20 00:33:49.869 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................"sa"
2025-06-20 00:33:49.869 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............5000
2025-06-20 00:33:49.869 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-20 00:33:50.004 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.007 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-20 00:33:50.082 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-06-20 00:33:50.116 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-20 00:33:50.122 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-06-20 00:33:50.123 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.144 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-06-20 00:33:50.155 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-06-20 00:33:50.155 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.162 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-20 00:33:50.186 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-06-20 00:33:50.186 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.218 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-06-20 00:33:50.218 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.264 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-06-20 00:33:50.265 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.296 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-06-20 00:33:50.297 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.329 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-06-20 00:33:50.329 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.345 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-20 00:33:50.374 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=8, active=1, idle=7, waiting=0)
2025-06-20 00:33:50.374 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-20 00:33:50.374 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.385 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-20 00:33:50.405 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-06-20 00:33:50.406 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:discodeit user=SA
2025-06-20 00:33:50.451 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:33:51.106 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-20 00:33:51.115 [main] DEBUG org.hibernate.SQL - 
    drop table if exists binary_contents cascade 
2025-06-20 00:33:51.117 [main] DEBUG org.hibernate.SQL - 
    drop table if exists channels cascade 
2025-06-20 00:33:51.117 [main] DEBUG org.hibernate.SQL - 
    drop table if exists message_attachments cascade 
2025-06-20 00:33:51.118 [main] DEBUG org.hibernate.SQL - 
    drop table if exists messages cascade 
2025-06-20 00:33:51.118 [main] DEBUG org.hibernate.SQL - 
    drop table if exists read_statuses cascade 
2025-06-20 00:33:51.119 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_statuses cascade 
2025-06-20 00:33:51.119 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-20 00:33:51.130 [main] DEBUG org.hibernate.SQL - 
    create table binary_contents (
        created_at timestamp with time zone not null,
        size bigint not null,
        id uuid not null,
        content_type varchar(100) not null,
        file_name varchar(225) not null,
        primary key (id)
    )
2025-06-20 00:33:51.133 [main] DEBUG org.hibernate.SQL - 
    create table channels (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        name varchar(100),
        description varchar(500),
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
2025-06-20 00:33:51.134 [main] DEBUG org.hibernate.SQL - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
2025-06-20 00:33:51.135 [main] DEBUG org.hibernate.SQL - 
    create table messages (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        content text not null,
        primary key (id)
    )
2025-06-20 00:33:51.137 [main] DEBUG org.hibernate.SQL - 
    create table read_statuses (
        created_at timestamp with time zone not null,
        last_read_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        channel_id uuid not null unique,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id),
        unique (user_id, channel_id)
    )
2025-06-20 00:33:51.139 [main] DEBUG org.hibernate.SQL - 
    create table user_statuses (
        created_at timestamp with time zone not null,
        last_active_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
2025-06-20 00:33:51.142 [main] DEBUG org.hibernate.SQL - 
    create table users (
        created_at timestamp with time zone not null,
        updated_at timestamp with time zone,
        id uuid not null,
        profile_id uuid unique,
        username varchar(50) not null unique,
        password varchar(60) not null,
        email varchar(100) not null unique,
        primary key (id)
    )
2025-06-20 00:33:51.145 [main] DEBUG org.hibernate.SQL - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
2025-06-20 00:33:51.146 [main] DEBUG org.hibernate.SQL - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
2025-06-20 00:33:51.147 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
2025-06-20 00:33:51.149 [main] DEBUG org.hibernate.SQL - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
2025-06-20 00:33:51.150 [main] DEBUG org.hibernate.SQL - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
2025-06-20 00:33:51.151 [main] DEBUG org.hibernate.SQL - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
2025-06-20 00:33:51.152 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
2025-06-20 00:33:51.153 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
2025-06-20 00:33:51.156 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-20 00:33:51.831 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-20 00:33:51.853 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-20 00:33:51.884 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.AuthController:
	{POST [/api/auth/login]}: login(LoginRequest)
2025-06-20 00:33:51.889 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.BinaryContentController:
	{GET [/api/binaryContents]}: findAllByIdIn(List)
	{GET [/api/binaryContents/{binaryContentId}/download]}: download(UUID)
	{GET [/api/binaryContents/{binaryContentId}]}: find(UUID)
2025-06-20 00:33:51.894 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.ChannelController:
	{PATCH [/api/channels/{channelId}]}: update(UUID,PublicChannelUpdateRequest)
	{DELETE [/api/channels/{channelId}]}: delete(UUID)
	{POST [/api/channels/public]}: create(PublicChannelCreateRequest)
	{POST [/api/channels/private]}: create(PrivateChannelCreateRequest)
	{GET [/api/channels]}: findAll(UUID)
2025-06-20 00:33:51.900 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.MessageController:
	{GET [/api/messages]}: findAllByChannelId(UUID,Instant,Pageable)
	{PATCH [/api/messages/{messageId}]}: update(UUID,MessageUpdateRequest)
	{DELETE [/api/messages/{messageId}]}: delete(UUID)
	{POST [/api/messages], consumes [multipart/form-data]}: create(MessageCreateRequest,List)
2025-06-20 00:33:51.904 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.ReadStatusController:
	{GET [/api/readStatuses]}: findAllByUserId(UUID)
	{PATCH [/api/readStatuses/{readStatusId}]}: update(UUID,ReadStatusUpdateRequest)
	{POST [/api/readStatuses]}: create(ReadStatusCreateRequest)
2025-06-20 00:33:51.906 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.s.m.d.c.UserController:
	{PATCH [/api/users/{userId}/userStatus]}: updateUserStatusByUserId(UUID,UserStatusUpdateRequest)
	{PATCH [/api/users/{userId}], consumes [multipart/form-data]}: update(UUID,UserUpdateRequest,MultipartFile)
	{DELETE [/api/users/{userId}]}: delete(UUID)
	{POST [/api/users], consumes [multipart/form-data]}: create(UserCreateRequest,MultipartFile)
	{GET [/api/users]}: findAll()
2025-06-20 00:33:51.910 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-06-20 00:33:51.922 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.a.OpenApiWebMvcResource:
	{GET [/v3/api-docs], produces [application/json]}: openapiJson(HttpServletRequest,String,Locale)
	{GET [/v3/api-docs.yaml], produces [application/vnd.oai.openapi]}: openapiYaml(HttpServletRequest,String,Locale)
2025-06-20 00:33:51.923 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerWelcomeWebMvc:
	{GET [/swagger-ui.html]}: redirectToUi(HttpServletRequest)
2025-06-20 00:33:51.925 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.w.u.SwaggerConfigResource:
	{GET [/v3/api-docs/swagger-config], produces [application/json]}: openapiJson(HttpServletRequest)
2025-06-20 00:33:51.929 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
2025-06-20 00:33:51.943 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-06-20 00:33:52.016 [main] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]], /swagger-ui*/*swagger-initializer.js=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /swagger-ui*/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]}
2025-06-20 00:33:52.048 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-20 00:33:52.094 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-20 00:33:52.236 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:discodeit'
2025-06-20 00:33:52.323 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-20 00:33:52.334 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-20 00:33:52.339 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Started DiscodeitApplication in 4.276 seconds (process running for 4.692)
2025-06-20 00:34:20.132 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:34:20.133 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:34:43.633 [http-nio-8080-exec-5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-20 00:34:43.633 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-20 00:34:43.633 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-20 00:34:43.634 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-20 00:34:43.634 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-20 00:34:43.634 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@14c1cba6
2025-06-20 00:34:43.634 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@611f28f5
2025-06-20 00:34:43.635 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-20 00:34:43.635 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-20 00:34:43.637 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-20 00:34:43.645 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:34:43.657 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:34:50.144 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:34:50.144 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:34:53.661 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-20 00:34:53.663 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:34:53.665 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-20 00:35:11.223 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/", parameters={}
2025-06-20 00:35:11.231 [http-nio-8080-exec-1] DEBUG o.s.w.s.v.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8, application/signed-exchange;v=b3;q=0.7]
2025-06-20 00:35:11.232 [http-nio-8080-exec-1] DEBUG o.s.w.s.view.InternalResourceView - View name [forward:], model {}
2025-06-20 00:35:11.233 [http-nio-8080-exec-1] DEBUG o.s.w.s.view.InternalResourceView - Forwarding to [index.html]
2025-06-20 00:35:11.236 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - "FORWARD" dispatch for GET "/index.html", parameters={}
2025-06-20 00:35:11.236 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:35:11.238 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Exiting from "FORWARD" dispatch, status 200
2025-06-20 00:35:11.238 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:11.250 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/assets/index-DRjprt8D.js", parameters={}
2025-06-20 00:35:11.250 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/assets/index-kQJbKSsj.css", parameters={}
2025-06-20 00:35:11.251 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:35:11.251 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:35:11.260 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:11.263 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:11.308 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/favicon.ico", parameters={}
2025-06-20 00:35:11.309 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-06-20 00:35:11.309 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-06-20 00:35:20.148 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:35:20.148 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:35:23.739 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-06-20 00:35:23.741 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.AuthController#login(LoginRequest)
2025-06-20 00:35:23.754 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] AuthController#login 시작 - args=[LoginRequest[username=null, password=null]]
2025-06-20 00:35:23.758 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicAuthService#login 시작 - args=[LoginRequest[username=null, password=null]]
2025-06-20 00:35:23.758 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicAuthService - [로그인] 요청: LoginRequest[username=null, password=null]
2025-06-20 00:35:23.813 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username is null
2025-06-20 00:35:23.840 [http-nio-8080-exec-7] WARN  c.s.m.d.s.basic.BasicAuthService - [로그인 실패] 존재하지 않는 사용자: null
2025-06-20 00:35:23.842 [http-nio-8080-exec-7] ERROR c.s.m.discodeit.config.LoggingAspect - [Service] BasicAuthService#login 예외 발생 - 84ms - NoSuchElementException: 해당 user을(를) 찾을 수 없습니다!
2025-06-20 00:35:23.844 [http-nio-8080-exec-7] ERROR c.s.m.discodeit.config.LoggingAspect - [Controller] AuthController#login 예외 발생 - 89ms - NoSuchElementException: 해당 user을(를) 찾을 수 없습니다!
2025-06-20 00:35:23.845 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.sprint.mission.discodeit.exception.GlobalExceptionHandler#handleNotFound(NoSuchElementException)
2025-06-20 00:35:23.865 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:23.866 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{message=해당 user을(를) 찾을 수 없습니다!, error=Not Found}]
2025-06-20 00:35:23.874 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.util.NoSuchElementException: 해당 user을(를) 찾을 수 없습니다!]
2025-06-20 00:35:23.874 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-06-20 00:35:39.445 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/users", parameters={multipart}
2025-06-20 00:35:39.481 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#create(UserCreateRequest, MultipartFile)
2025-06-20 00:35:39.512 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestPartMethodArgumentResolver - Read "application/json" to [UserCreateRequest[username=조현아, email=h@gmail.com, password=1234]]
2025-06-20 00:35:39.512 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#create 시작 - args=[UserCreateRequest[username=조현아, email=h@gmail.com, password=1234], null]
2025-06-20 00:35:39.514 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#create 시작 - args=[UserCreateRequest[username=조현아, email=h@gmail.com, password=1234], Optional.empty]
2025-06-20 00:35:39.514 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicUserService - [user] 생성 요청: email=h@gmail.com, userName=조현아
2025-06-20 00:35:39.521 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-06-20 00:35:39.521 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [h@gmail.com]
2025-06-20 00:35:39.521 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:INTEGER) <- [1]
2025-06-20 00:35:39.524 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-06-20 00:35:39.524 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:VARCHAR) <- [조현아]
2025-06-20 00:35:39.524 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:INTEGER) <- [1]
2025-06-20 00:35:39.550 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicUserService - [user] 생성 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, name=조현아, email=h@gmail.com, isProfile=false
2025-06-20 00:35:39.551 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#create 완료 - 37ms - result=UserDto
2025-06-20 00:35:39.557 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-06-20 00:35:39.558 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.535977Z]
2025-06-20 00:35:39.560 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:VARCHAR) <- [h@gmail.com]
2025-06-20 00:35:39.560 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:VARCHAR) <- [1234]
2025-06-20 00:35:39.560 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [null]
2025-06-20 00:35:39.560 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (5:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.535977Z]
2025-06-20 00:35:39.561 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (6:VARCHAR) <- [조현아]
2025-06-20 00:35:39.561 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (7:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.549639500Z]
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.548567900Z]
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.549639500Z]
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.568 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (5:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:35:39.569 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#create 완료 - 57ms - result=ResponseEntity
2025-06-20 00:35:39.577 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.579 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserDto[id=af2471cb-cdf1-4888-9a7c-55e9677944ba, username=조현아, email=h@gmail.com, profile=null, onli (truncated)...]
2025-06-20 00:35:39.580 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-20 00:35:39.583 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:35:39.583 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:35:39.584 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:35:39.584 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:35:39.590 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.590 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.590 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.590 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.591 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.591 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:35:39.582Z]]
2025-06-20 00:35:39.591 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:35:39.582Z
2025-06-20 00:35:39.591 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:35:39.582Z
2025-06-20 00:35:39.591 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Connection not added, stats (total=10, active=2, idle=8, waiting=0)
2025-06-20 00:35:39.595 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.595 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.597 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.597 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.603 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:35:39.582Z
2025-06-20 00:35:39.603 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 12ms - result=UserStatusDto
2025-06-20 00:35:39.603 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:35:39.582Z
2025-06-20 00:35:39.604 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 13ms - result=UserStatusDto
2025-06-20 00:35:39.612 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:35:39.612 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:35:39.614 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.582Z]
2025-06-20 00:35:39.614 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.582Z]
2025-06-20 00:35:39.614 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.603607500Z]
2025-06-20 00:35:39.614 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:35:39.604614300Z]
2025-06-20 00:35:39.614 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.614 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.614 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:35:39.614 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:35:39.618 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 28ms - result=ResponseEntity
2025-06-20 00:35:39.618 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 28ms - result=ResponseEntity
2025-06-20 00:35:39.642 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.642 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.644 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:35:39.645 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:35:39.645 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.645 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.650 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users", parameters={}
2025-06-20 00:35:39.650 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#findAll()
2025-06-20 00:35:39.651 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:35:39.651 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:35:39.651 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:35:39.664 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        p1_0.id,
        p1_0.content_type,
        p1_0.created_at,
        p1_0.file_name,
        p1_0.size,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        binary_contents p1_0 
            on p1_0.id=u1_0.profile_id 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id
2025-06-20 00:35:39.677 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:35:39.677 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 26ms - result=ListN
2025-06-20 00:35:39.678 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 27ms - result=ResponseEntity
2025-06-20 00:35:39.687 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.688 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UserDto[id=af2471cb-cdf1-4888-9a7c-55e9677944ba, username=조현아, email=h@gmail.com, profile=null, onl (truncated)...]
2025-06-20 00:35:39.690 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.705 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.706 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:39.706 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.706 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:39.707 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.708 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.708 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.709 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users", parameters={}
2025-06-20 00:35:39.710 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#findAll()
2025-06-20 00:35:39.709 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.710 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:35:39.710 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:39.711 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:35:39.711 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:35:39.719 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.719 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.720 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        p1_0.id,
        p1_0.content_type,
        p1_0.created_at,
        p1_0.file_name,
        p1_0.size,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        binary_contents p1_0 
            on p1_0.id=u1_0.profile_id 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id
2025-06-20 00:35:39.721 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.721 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.724 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.724 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:39.725 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 15ms - result=ListN
2025-06-20 00:35:39.726 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 17ms - result=ResponseEntity
2025-06-20 00:35:39.726 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:35:39.726 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 15ms - result=ListN
2025-06-20 00:35:39.727 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 17ms - result=ResponseEntity
2025-06-20 00:35:39.727 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.727 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.728 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.728 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UserDto[id=af2471cb-cdf1-4888-9a7c-55e9677944ba, username=조현아, email=h@gmail.com, profile=null, onl (truncated)...]
2025-06-20 00:35:39.729 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.730 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.734 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:39.735 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:39.735 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:39.737 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.737 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 29ms - result=ListN
2025-06-20 00:35:39.738 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 30ms - result=ResponseEntity
2025-06-20 00:35:39.739 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.739 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.740 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.740 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:39.741 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.741 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.741 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:39.745 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.745 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.748 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.748 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:35:39.748 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:35:39.749 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.750 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.750 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.750 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.752 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.752 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:39.753 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.753 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.756 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.756 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:39.757 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.757 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.758 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.758 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.758 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:39.759 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:39.765 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:39.765 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.765 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:39.765 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.765 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:39.766 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.766 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.767 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 9ms - result=ListN
2025-06-20 00:35:39.767 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 14ms - result=ListN
2025-06-20 00:35:39.767 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 10ms - result=ResponseEntity
2025-06-20 00:35:39.767 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 14ms - result=ResponseEntity
2025-06-20 00:35:39.768 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.768 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.768 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.769 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.769 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.770 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:39.779 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:39.779 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:39.779 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.780 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.780 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:39.781 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:39.781 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:39.781 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:39.781 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:35:39.782 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:35:39.783 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:39.783 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:39.783 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:42.743 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:42.743 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:42.743 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.744 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.745 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:42.745 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.746 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:42.747 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:42.748 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:42.748 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:42.748 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:42.748 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:35:42.748 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 5ms - result=ResponseEntity
2025-06-20 00:35:42.749 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:42.749 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:42.749 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:42.752 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:42.752 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:42.752 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.753 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.753 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:35:42.755 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:42.756 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:42.756 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:45.744 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:45.744 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:45.745 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.746 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.749 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:45.749 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.750 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:45.754 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:45.754 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:45.754 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:45.755 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:45.755 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 9ms - result=ListN
2025-06-20 00:35:45.756 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 11ms - result=ResponseEntity
2025-06-20 00:35:45.756 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:45.757 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:45.758 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:45.765 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:45.766 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:45.767 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.768 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.768 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:45.771 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:45.772 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:45.773 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:45.773 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:35:45.774 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:35:45.775 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:45.775 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:45.776 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:48.743 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:48.744 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:48.744 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.745 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.747 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:48.748 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.749 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:48.751 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:48.751 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:48.751 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:48.752 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:48.752 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:35:48.753 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:35:48.753 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:48.753 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:48.755 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:48.762 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:48.763 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:48.763 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.764 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.764 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:48.767 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:48.767 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:48.768 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:48.768 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:35:48.769 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:35:48.769 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:48.770 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:48.770 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:50.149 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:35:50.149 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:35:51.744 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:51.745 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:51.745 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.746 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.749 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:51.749 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.749 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:51.752 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:51.752 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:51.752 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:51.753 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:51.753 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:35:51.753 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:35:51.754 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:51.754 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:51.755 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:51.764 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:51.764 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:51.765 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.766 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.767 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:51.769 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:51.769 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:51.770 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:51.770 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:35:51.771 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:35:51.772 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:51.772 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:51.773 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:54.742 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:54.743 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:54.743 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.744 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.747 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:54.747 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.748 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:54.750 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:54.750 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:54.750 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:54.751 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:54.751 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:35:54.751 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:35:54.752 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:54.752 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:54.754 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:54.761 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:54.762 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:54.762 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.763 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.763 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:54.766 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:54.766 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:54.767 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:54.767 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:35:54.767 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:35:54.768 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:54.768 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:54.769 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:57.743 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:57.743 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:35:57.744 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.745 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.748 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:57.748 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.749 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:35:57.751 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:35:57.752 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:35:57.752 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:35:57.752 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:57.752 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:35:57.753 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:35:57.753 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:57.754 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:57.755 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:35:57.762 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:35:57.762 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:35:57.763 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.763 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.763 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:35:57.766 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:35:57.766 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:35:57.767 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:35:57.767 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:35:57.768 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:35:57.768 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:35:57.769 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:35:57.769 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:00.744 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:00.744 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:00.746 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.746 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.750 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:00.750 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.751 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:00.753 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:00.753 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:00.754 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:00.754 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:00.754 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:00.755 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:00.755 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:00.756 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:00.757 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:00.764 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:00.764 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:00.765 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.765 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.765 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:00.768 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:00.768 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:00.769 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:00.769 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:00.770 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:00.770 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:00.771 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:00.772 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:03.745 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:03.745 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:03.746 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.747 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.750 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:03.750 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.752 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:03.756 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:03.756 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:03.756 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:03.757 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:03.757 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 10ms - result=ListN
2025-06-20 00:36:03.758 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 12ms - result=ResponseEntity
2025-06-20 00:36:03.760 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:03.760 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:03.761 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:03.767 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:03.767 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:03.767 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.767 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.767 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:03.770 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:03.770 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:03.771 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:03.771 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:03.772 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:36:03.772 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:03.772 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:03.773 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:06.984 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:06.984 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:06.985 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:06.986 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:06.988 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:06.988 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:06.989 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:06.991 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:06.991 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:06.991 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:06.991 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:06.991 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:36:06.992 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:06.992 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:06.993 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:06.994 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:07.001 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:07.001 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:07.002 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:07.002 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:07.002 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:07.005 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:07.006 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:07.006 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:07.006 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:07.007 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:07.008 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:07.008 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:07.009 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:09.985 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:36:09.985 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:09.985 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:36:09.986 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:09.986 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:09.987 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:09.987 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:09.980Z]]
2025-06-20 00:36:09.988 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:09.980Z]]
2025-06-20 00:36:09.988 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:09.980Z]]
2025-06-20 00:36:09.988 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:36:09.980Z
2025-06-20 00:36:09.989 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:09.990 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:09.991 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:09.991 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:09.991 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:09.993 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:36:09.980Z
2025-06-20 00:36:09.993 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:09.993 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 5ms - result=UserStatusDto
2025-06-20 00:36:09.993 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:09.993 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:09.994 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:09.994 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:09.994 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:36:09.994 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:36:09.994 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:36:09.980Z]
2025-06-20 00:36:09.994 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:36:09.993775Z]
2025-06-20 00:36:09.995 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:09.995 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:36:09.995 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:09.995 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:09.996 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:09.996 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:36:09.997 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:09.997 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:36:09.998 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:10.004 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:10.005 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:10.005 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:10.006 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:10.006 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:10.008 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:10.008 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:10.009 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:10.009 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:10.010 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:10.010 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:10.010 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:10.012 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:12.988 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:12.988 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:12.989 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:12.990 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:12.993 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:12.993 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:12.994 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:12.997 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:12.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:12.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:12.999 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:12.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 9ms - result=ListN
2025-06-20 00:36:12.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 10ms - result=ResponseEntity
2025-06-20 00:36:13.000 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:13.001 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:13.002 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:13.009 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:13.009 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:13.010 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:13.010 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:13.010 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:13.013 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:13.013 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:13.014 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:13.014 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:13.015 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:13.016 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:13.016 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:13.017 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:15.994 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:15.994 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:15.995 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:15.996 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:15.998 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:15.998 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:15.999 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:16.001 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:16.002 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:16.002 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:16.003 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:16.003 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:16.004 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:16.005 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:16.005 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:16.006 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:16.016 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:16.016 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:16.017 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:16.017 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:16.018 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:16.022 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:16.022 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:16.023 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:16.023 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:16.023 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:36:16.024 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:16.024 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:16.025 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:18.999 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:18.999 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:19.000 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.000 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.003 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:19.004 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.004 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:19.007 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:19.007 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:19.007 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:19.008 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:19.008 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:19.008 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:36:19.009 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:19.009 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:19.010 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:19.017 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:19.018 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:19.018 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.019 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.019 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:19.021 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:19.022 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:19.022 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:19.022 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:19.023 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:19.023 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:19.024 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:19.025 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:20.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:36:20.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:36:21.988 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:21.988 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:21.989 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:21.989 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:21.993 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:21.993 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:21.994 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:21.996 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:21.996 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:21.996 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:21.996 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:21.996 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:21.998 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:21.998 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:21.999 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:22.000 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:22.006 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:22.007 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:22.007 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:22.008 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:22.008 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:22.010 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:22.011 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:22.011 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:22.012 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:22.012 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:22.013 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:22.013 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:22.014 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:24.998 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:24.999 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:24.999 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.000 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.003 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:25.003 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.004 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:25.007 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:25.007 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:25.007 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:25.008 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:25.008 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 8ms - result=ListN
2025-06-20 00:36:25.008 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:25.009 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:25.009 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:25.010 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:25.019 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:25.020 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:25.020 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.021 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.021 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:25.024 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:25.024 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:25.025 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:25.025 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:25.025 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:25.026 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:25.026 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:25.027 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:27.991 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:27.991 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:27.992 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:27.993 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:27.995 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:27.995 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:27.996 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:27.998 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:27.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:27.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:27.999 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:27.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:27.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:28.000 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:28.000 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:28.002 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:28.008 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:28.008 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:28.009 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:28.010 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:28.010 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:28.012 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:28.013 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:28.013 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:28.013 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:28.014 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:28.015 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:28.015 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:28.015 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:30.991 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:30.991 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:30.992 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:30.992 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:30.995 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:30.995 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:30.996 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:30.997 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:30.998 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:30.998 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:30.998 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:30.998 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:30.999 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:30.999 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:30.999 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:31.000 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:31.007 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:31.007 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:31.008 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:31.008 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:31.008 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:31.010 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:31.010 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:31.011 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:31.011 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:31.011 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:36:31.012 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:31.012 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:31.013 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:33.985 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:33.986 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:33.986 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:33.987 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:33.989 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:33.989 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:33.990 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:33.992 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:33.992 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:33.993 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:33.993 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:33.993 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:33.994 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:36:33.994 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:33.994 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:33.996 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:34.003 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:34.003 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:34.004 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:34.005 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:34.005 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:34.007 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:34.008 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:34.009 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:34.009 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:34.009 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:34.010 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:34.010 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:34.011 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:36.987 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:36.987 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:36.988 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:36.988 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:36.991 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:36.991 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:36.992 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:36.994 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:36.994 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:36.994 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:36.995 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:36.995 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:36.995 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:36.996 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:36.996 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:36.997 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:37.004 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:37.004 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:37.005 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:37.005 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:37.005 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:37.008 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:37.008 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:37.009 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:37.009 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:37.010 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:37.010 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:37.010 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:37.011 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:39.987 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:36:39.987 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:36:39.989 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:39.982Z]]
2025-06-20 00:36:39.989 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:39.982Z]]
2025-06-20 00:36:39.990 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:36:39.982Z]]
2025-06-20 00:36:39.990 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:36:39.982Z
2025-06-20 00:36:39.990 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users", parameters={}
2025-06-20 00:36:39.991 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:39.991 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#findAll()
2025-06-20 00:36:39.991 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:39.991 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:36:39.991 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:39.992 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:36:39.992 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:36:39.992 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:39.992 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:39.993 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:39.994 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:36:39.982Z
2025-06-20 00:36:39.995 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 5ms - result=UserStatusDto
2025-06-20 00:36:39.995 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:39.995 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:39.996 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        p1_0.id,
        p1_0.content_type,
        p1_0.created_at,
        p1_0.file_name,
        p1_0.size,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        binary_contents p1_0 
            on p1_0.id=u1_0.profile_id 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id
2025-06-20 00:36:39.996 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:39.996 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:36:39.996 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:36:39.982Z]
2025-06-20 00:36:39.996 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:36:39.995152500Z]
2025-06-20 00:36:39.997 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:39.997 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:36:39.998 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:39.999 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:39.999 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:39.999 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:39.999 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:39.999 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:36:39.999 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:36:39.999 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 7ms - result=ListN
2025-06-20 00:36:39.999 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:40.000 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 8ms - result=ListN
2025-06-20 00:36:40.000 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:40.001 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:36:40.001 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.001 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.001 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.002 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UserDto[id=af2471cb-cdf1-4888-9a7c-55e9677944ba, username=조현아, email=h@gmail.com, profile=null, onl (truncated)...]
2025-06-20 00:36:40.002 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:40.003 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.003 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.011 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:40.011 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:40.012 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:40.012 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:40.012 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.012 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.013 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.013 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.013 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:40.015 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:40.016 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.016 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:40.016 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.017 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:40.017 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:40.017 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:40.018 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:40.018 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.018 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:40.018 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:40.018 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:40.018 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:40.019 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.019 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:40.019 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:40.020 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:40.020 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.021 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:40.022 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.022 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:40.023 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:40.023 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.024 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.024 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:40.027 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:40.028 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.028 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:40.029 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:36:40.029 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:40.030 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.030 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:40.030 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:40.033 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:40.034 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:40.034 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.034 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.034 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:40.037 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:40.037 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:40.038 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:40.038 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:40.038 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:36:40.038 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:40.038 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:40.039 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:43.989 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:43.989 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:43.990 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:43.990 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:43.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:43.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:43.994 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:43.996 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:43.996 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:43.996 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:43.997 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:43.997 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:36:43.997 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:43.998 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:43.998 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:43.999 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:44.008 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:44.008 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:44.009 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:44.009 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:44.009 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:44.012 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:44.012 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:44.013 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:44.013 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:36:44.014 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:44.014 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:44.014 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:44.015 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:46.984 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:46.984 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:46.985 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.985 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.986 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:46.986 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.986 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 2ms - result=ResponseEntity
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:46.987 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:46.990 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:46.990 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:46.991 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.991 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.991 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:46.992 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:46.993 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:49.994 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:49.994 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:49.995 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:49.995 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:49.998 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:49.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:49.998 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:50.000 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:50.001 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:50.001 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:50.001 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:50.001 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:50.002 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:50.002 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:50.002 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:50.003 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:50.011 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:50.049 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:50.050 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:50.051 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:50.051 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:50.053 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:50.054 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:50.054 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:50.054 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:50.055 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:36:50.056 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:50.056 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:50.057 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:50.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:36:50.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:36:52.985 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:52.986 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:52.986 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:52.987 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:52.989 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:52.989 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:52.990 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:52.992 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:52.992 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:52.992 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:52.993 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:52.993 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:36:52.993 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:36:52.994 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:52.994 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:52.995 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:53.001 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:53.001 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:53.002 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:53.002 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:53.002 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:53.004 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:53.005 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:53.005 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:53.005 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:36:53.006 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:36:53.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:53.007 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:53.008 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:55.983 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:55.983 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:55.983 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.984 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:55.985 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:36:55.986 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 3ms - result=ResponseEntity
2025-06-20 00:36:55.986 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:55.986 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:55.986 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:55.988 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:55.988 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:55.989 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.989 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.989 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:55.989 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:55.989 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:55.990 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:58.990 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:58.991 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:36:58.991 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.991 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.992 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:58.992 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.992 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 2ms - result=ResponseEntity
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:58.993 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:36:58.996 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:36:58.996 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:36:58.996 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.996 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.996 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:36:58.997 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:36:58.998 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:36:58.998 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:01.985 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:01.985 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:01.985 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.986 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.986 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:01.986 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:01.987 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:01.988 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 3ms - result=ResponseEntity
2025-06-20 00:37:01.988 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:01.988 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:01.988 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:01.991 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:01.991 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:01.991 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.991 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.991 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:01.992 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:01.992 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:01.992 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:01.993 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:37:01.993 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 2ms - result=ResponseEntity
2025-06-20 00:37:01.993 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:01.993 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:01.993 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:04.990 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:04.990 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:04.990 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.990 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.991 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:04.991 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.991 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 2ms - result=ResponseEntity
2025-06-20 00:37:04.992 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:04.993 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:04.993 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:04.996 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:04.996 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:04.996 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.996 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.996 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:04.997 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:09.988 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:37:09.989 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:37:09.990 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:09.984Z]]
2025-06-20 00:37:09.992 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:09.984Z]]
2025-06-20 00:37:09.992 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:09.984Z]]
2025-06-20 00:37:09.992 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:37:09.984Z
2025-06-20 00:37:09.994 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:09.995 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:09.996 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:37:09.984Z
2025-06-20 00:37:09.996 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 4ms - result=UserStatusDto
2025-06-20 00:37:09.997 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:37:09.999 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:37:09.984Z]
2025-06-20 00:37:09.999 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:37:09.996951600Z]
2025-06-20 00:37:09.999 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:09.999 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:37:10.000 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:37:10.001 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:10.001 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:37:10.001 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:18.997 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:18.997 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:18.998 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:18.998 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:19.001 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:19.001 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:19.002 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:19.004 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:19.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:19.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:19.005 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:19.005 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 7ms - result=ListN
2025-06-20 00:37:19.005 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:37:19.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:19.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:19.007 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:19.014 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:19.014 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:19.015 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:19.015 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:19.015 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:19.017 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:19.018 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:19.018 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:19.018 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:37:19.019 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:37:19.019 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:19.020 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:19.020 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:20.162 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:37:20.162 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:37:29.394 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:29.394 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:29.395 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.395 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.397 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:29.397 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.397 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:29.399 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:29.399 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:29.399 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:29.399 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:29.399 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:37:29.400 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 5ms - result=ResponseEntity
2025-06-20 00:37:29.400 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:29.401 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:29.401 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:29.415 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:29.416 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:29.416 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.417 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.417 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:29.418 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:29.418 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:29.419 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:29.419 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:37:29.419 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:37:29.420 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:29.420 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:29.420 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:31.013 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:31.013 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:31.014 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.014 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.017 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:31.017 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.018 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:31.019 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:31.019 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:31.019 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:31.020 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:31.020 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:37:31.020 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 6ms - result=ResponseEntity
2025-06-20 00:37:31.020 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:31.020 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:31.021 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:31.028 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:31.028 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:31.029 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.029 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.029 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:31.032 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:31.032 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:31.032 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:31.032 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:37:31.033 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:37:31.033 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:31.033 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:31.033 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:34.012 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:34.012 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:34.013 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.014 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.017 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:34.017 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.018 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:34.020 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:34.021 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:34.021 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:34.022 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:34.022 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 8ms - result=ListN
2025-06-20 00:37:34.022 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:37:34.023 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:34.023 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:34.024 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:34.031 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:34.032 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:34.032 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.033 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.033 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:34.035 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:34.035 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:34.036 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:34.036 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:37:34.037 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:37:34.037 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:34.038 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:34.039 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:37.990 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:37.991 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:37.991 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:37.991 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:37.994 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:37.994 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:37.995 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:37.997 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:37.998 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:37.998 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:37.998 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:37.998 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:37:37.998 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:37:37.999 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:37.999 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:38.000 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:38.007 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:38.007 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:38.008 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:38.009 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:38.009 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:38.011 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:38.011 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:38.012 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:38.012 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:37:38.012 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:37:38.012 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:38.013 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:38.013 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:39.995 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:37:39.995 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users", parameters={}
2025-06-20 00:37:39.996 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:37:39.996 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#findAll()
2025-06-20 00:37:39.996 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:37:39.997 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:37:39.997 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:37:39.997 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:39.990Z]]
2025-06-20 00:37:39.997 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:39.990Z]]
2025-06-20 00:37:39.998 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:37:39.990Z]]
2025-06-20 00:37:39.998 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:37:39.990Z
2025-06-20 00:37:40.000 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        p1_0.id,
        p1_0.content_type,
        p1_0.created_at,
        p1_0.file_name,
        p1_0.size,
        s1_0.id,
        s1_0.created_at,
        s1_0.last_active_at,
        s1_0.updated_at,
        s1_0.user_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        binary_contents p1_0 
            on p1_0.id=u1_0.profile_id 
    left join
        user_statuses s1_0 
            on u1_0.id=s1_0.user_id
2025-06-20 00:37:40.000 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:40.001 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.002 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:37:39.990Z
2025-06-20 00:37:40.002 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 4ms - result=UserStatusDto
2025-06-20 00:37:40.002 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:37:40.002 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 5ms - result=ListN
2025-06-20 00:37:40.003 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:37:40.003 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:40.003 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:37:40.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:37:39.990Z]
2025-06-20 00:37:40.004 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[UserDto[id=af2471cb-cdf1-4888-9a7c-55e9677944ba, username=조현아, email=h@gmail.com, profile=null, onl (truncated)...]
2025-06-20 00:37:40.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:37:40.003680200Z]
2025-06-20 00:37:40.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.004 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:37:40.005 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:40.006 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 9ms - result=ResponseEntity
2025-06-20 00:37:40.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:40.007 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:37:40.008 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:40.017 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:40.017 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:40.017 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:40.017 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:40.018 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.018 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.018 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.018 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.019 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:40.021 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:40.022 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:40.022 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.022 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.023 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:40.023 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:40.023 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:37:40.023 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:37:40.024 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:40.024 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:40.025 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:40.025 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:40.025 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:40.026 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:40.026 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:40.026 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 8ms - result=ListN
2025-06-20 00:37:40.027 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 9ms - result=ResponseEntity
2025-06-20 00:37:40.028 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:40.028 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:40.029 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:40.034 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:40.035 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:40.035 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.036 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.036 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:40.039 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:40.039 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:40.040 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:40.040 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:37:40.041 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:37:40.041 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:40.041 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:40.042 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:43.988 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:43.988 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:43.989 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:43.990 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:43.992 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:43.992 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:43.993 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:43.995 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:43.995 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:43.996 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:43.996 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:43.996 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:37:43.997 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:37:43.997 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:43.997 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:43.998 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:44.006 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:44.006 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:44.006 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:44.007 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:44.007 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:44.009 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:44.009 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:44.009 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:44.009 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:37:44.010 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:37:44.010 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:44.010 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:44.011 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:46.985 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:46.985 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:46.986 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:46.986 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:46.990 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:46.990 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:46.991 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:46.994 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:46.994 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:46.995 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:46.996 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:46.996 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 9ms - result=ListN
2025-06-20 00:37:46.996 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 10ms - result=ResponseEntity
2025-06-20 00:37:46.997 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:46.997 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:46.998 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:47.006 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:47.006 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:47.007 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:47.007 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:47.007 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:47.011 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:47.011 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:47.012 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:47.012 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:37:47.013 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:37:47.013 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:47.013 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:47.014 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:49.983 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:49.983 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:49.983 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.984 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.984 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:49.984 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:49.985 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 1ms - result=ResponseEntity
2025-06-20 00:37:49.986 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:49.987 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:49.987 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:49.989 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:49.990 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:49.991 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:50.169 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:37:50.169 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:37:52.991 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:52.991 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:52.992 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.992 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:52.993 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:52.994 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:52.994 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 2ms - result=ResponseEntity
2025-06-20 00:37:52.994 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:52.994 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:52.994 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:52.997 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:52.997 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:52.997 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.997 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.997 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:52.998 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:52.999 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:55.993 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:55.993 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:55.993 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:55.993 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:55.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:55.995 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:55.995 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:55.995 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:55.995 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:55.995 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 3ms - result=ResponseEntity
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:55.996 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:55.999 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:55.999 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:56.000 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:56.000 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:56.000 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:56.001 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:56.001 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:56.001 [http-nio-8080-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:56.001 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:37:56.001 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 1ms - result=ResponseEntity
2025-06-20 00:37:56.002 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:56.002 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:56.002 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:58.990 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:58.991 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:37:58.991 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:58.992 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:58.994 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:58.994 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:58.995 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:37:58.996 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:37:58.997 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:37:58.997 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:37:58.997 [http-nio-8080-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:58.997 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:37:58.998 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:37:58.998 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:58.998 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:58.999 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:37:59.005 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:37:59.006 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:37:59.006 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:59.006 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:59.007 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:37:59.008 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:37:59.008 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:37:59.009 [http-nio-8080-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:37:59.009 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:37:59.009 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:37:59.010 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:37:59.010 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:37:59.011 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:01.994 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:01.995 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:01.995 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:01.995 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:01.998 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:01.998 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:01.999 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:02.000 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:02.001 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:02.001 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:02.001 [http-nio-8080-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:02.001 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:02.002 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:38:02.002 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:02.002 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:02.003 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:02.011 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:02.012 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:02.012 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:02.013 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:02.013 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:02.016 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:02.016 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:02.017 [http-nio-8080-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:02.017 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:38:02.017 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:02.017 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:02.018 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:02.018 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:04.985 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:04.986 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:04.986 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:04.987 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:04.989 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:04.989 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:04.990 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:04.992 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:04.992 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:04.992 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:04.993 [http-nio-8080-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:04.993 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:38:04.993 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:38:04.993 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:04.994 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:04.994 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:05.001 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:05.002 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:05.002 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:05.004 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:05.004 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:05.005 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:05.006 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:05.006 [http-nio-8080-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:05.006 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:38:05.007 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:05.007 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:05.007 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:05.009 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:07.988 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:07.989 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:07.989 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:07.990 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:07.992 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:07.992 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:07.993 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:07.994 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:07.995 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:07.995 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:07.995 [http-nio-8080-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:07.995 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:07.996 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:38:07.996 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:07.996 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:07.997 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:08.004 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:08.005 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:08.005 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:08.006 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:08.006 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:08.008 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:08.008 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:08.009 [http-nio-8080-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:08.009 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:38:08.010 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:08.010 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:08.010 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:08.011 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:09.995 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - PATCH "/api/users/af2471cb-cdf1-4888-9a7c-55e9677944ba/userStatus", parameters={}
2025-06-20 00:38:09.996 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.UserController#updateUserStatusByUserId(UUID, UserStatusUpdateRequest)
2025-06-20 00:38:09.998 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:38:09.991Z]]
2025-06-20 00:38:09.998 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:38:09.991Z]]
2025-06-20 00:38:09.999 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:38:09.991Z]]
2025-06-20 00:38:09.999 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:38:09.991Z
2025-06-20 00:38:10.002 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        us1_0.id,
        us1_0.created_at,
        us1_0.last_active_at,
        us1_0.updated_at,
        us1_0.user_id 
    from
        user_statuses us1_0 
    join
        users u1_0 
            on u1_0.id=us1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:10.003 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:10.004 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, newLastActiveAt=2025-06-19T15:38:09.991Z
2025-06-20 00:38:10.004 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 5ms - result=UserStatusDto
2025-06-20 00:38:10.005 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        user_statuses 
    set
        last_active_at=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-06-20 00:38:10.006 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:TIMESTAMP_UTC) <- [2025-06-19T15:38:09.991Z]
2025-06-20 00:38:10.006 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:TIMESTAMP_UTC) <- [2025-06-19T15:38:10.005154900Z]
2025-06-20 00:38:10.006 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (3:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:10.006 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (4:UUID) <- [fc9b4c5a-48df-4f6f-8ced-a688496acad5]
2025-06-20 00:38:10.007 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:38:10.008 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:10.008 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [UserStatusDto[id=fc9b4c5a-48df-4f6f-8ced-a688496acad5, userId=af2471cb-cdf1-4888-9a7c-55e9677944ba,  (truncated)...]
2025-06-20 00:38:10.009 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:10.994 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:10.994 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:10.995 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:10.995 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:10.998 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:10.998 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:10.999 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:11.000 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:11.001 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:11.001 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:11.001 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:11.001 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:38:11.002 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:38:11.002 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:11.002 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:11.003 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:11.011 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:11.011 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:11.012 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:11.012 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:11.012 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:11.015 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:11.015 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:11.015 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:11.016 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:38:11.016 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:38:11.016 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:11.017 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:11.017 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:13.992 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:13.992 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:13.994 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:13.994 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:13.996 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:13.996 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:13.996 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:13.998 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:13.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:13.998 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:13.999 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:13.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:13.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:14.000 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:14.000 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:14.001 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:14.008 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:14.009 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:14.009 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:14.010 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:14.010 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:14.013 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:14.013 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:14.014 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:14.014 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:38:14.014 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:14.015 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:14.015 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:14.016 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:16.996 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:16.997 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:16.997 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:16.998 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:17.000 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:17.000 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:17.000 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:17.002 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:17.002 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:17.002 [http-nio-8080-exec-2] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:17.003 [http-nio-8080-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:17.003 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:17.003 [http-nio-8080-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 6ms - result=ResponseEntity
2025-06-20 00:38:17.003 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:17.003 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:17.004 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:17.008 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:17.008 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:17.009 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:17.009 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:17.010 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:17.011 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:17.011 [http-nio-8080-exec-1] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:17.011 [http-nio-8080-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:17.011 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 1ms - result=ListN
2025-06-20 00:38:17.011 [http-nio-8080-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 2ms - result=ResponseEntity
2025-06-20 00:38:17.012 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:17.012 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:17.013 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:19.997 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:19.998 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:19.998 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:19.999 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:20.001 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:20.001 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:20.001 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:20.004 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:20.005 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:20.005 [http-nio-8080-exec-10] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:20.005 [http-nio-8080-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:20.005 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:38:20.006 [http-nio-8080-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:38:20.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:20.006 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:20.007 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:20.014 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:20.014 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:20.015 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:20.015 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:20.015 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:20.017 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:20.018 [http-nio-8080-exec-9] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:20.018 [http-nio-8080-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:20.018 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:38:20.018 [http-nio-8080-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:38:20.019 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:20.019 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:20.020 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:20.179 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:38:20.179 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-06-20 00:38:22.985 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:22.985 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:22.986 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:22.986 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:22.989 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:22.989 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:22.989 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:22.991 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:22.991 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:22.991 [http-nio-8080-exec-7] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:22.992 [http-nio-8080-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:22.992 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:22.992 [http-nio-8080-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 6ms - result=ResponseEntity
2025-06-20 00:38:22.993 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:22.993 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:22.994 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:23.000 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:23.000 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:23.001 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:23.001 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:23.001 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:23.003 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:23.003 [http-nio-8080-exec-3] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:23.004 [http-nio-8080-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:23.004 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:38:23.005 [http-nio-8080-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:38:23.005 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:23.005 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:23.006 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:25.987 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:25.987 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:25.988 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:25.989 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:25.991 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:25.991 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:25.992 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:25.994 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:25.995 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:25.995 [http-nio-8080-exec-5] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:25.995 [http-nio-8080-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:25.995 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:38:25.996 [http-nio-8080-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 8ms - result=ResponseEntity
2025-06-20 00:38:25.996 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:25.996 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:25.997 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:26.004 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:26.004 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:26.005 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:26.005 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:26.005 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:26.007 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:26.007 [http-nio-8080-exec-4] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:26.008 [http-nio-8080-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:26.008 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:38:26.008 [http-nio-8080-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:38:26.009 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:26.009 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:26.010 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:28.998 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/channels?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:28.998 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ChannelController#findAll(UUID)
2025-06-20 00:38:28.999 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.000 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.002 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:29.002 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.002 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, size=0
2025-06-20 00:38:29.004 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type,
        c1_0.updated_at 
    from
        channels c1_0 
    where
        c1_0.type=? 
        or c1_0.id in (?)
2025-06-20 00:38:29.004 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:ENUM) <- [PUBLIC]
2025-06-20 00:38:29.004 [http-nio-8080-exec-8] TRACE org.hibernate.orm.jdbc.bind - binding parameter (2:UUID) <- [null]
2025-06-20 00:38:29.005 [http-nio-8080-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:29.005 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:38:29.005 [http-nio-8080-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 6ms - result=ResponseEntity
2025-06-20 00:38:29.006 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:29.006 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:29.007 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:29.014 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/readStatuses?userId=af2471cb-cdf1-4888-9a7c-55e9677944ba", parameters={masked}
2025-06-20 00:38:29.014 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.sprint.mission.discodeit.controller.ReadStatusController#findAllByUserId(UUID)
2025-06-20 00:38:29.015 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.016 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.016 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba
2025-06-20 00:38:29.018 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    join
        users u1_0 
            on u1_0.id=rs1_0.user_id 
    where
        u1_0.id=?
2025-06-20 00:38:29.018 [http-nio-8080-exec-6] TRACE org.hibernate.orm.jdbc.bind - binding parameter (1:UUID) <- [af2471cb-cdf1-4888-9a7c-55e9677944ba]
2025-06-20 00:38:29.018 [http-nio-8080-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=af2471cb-cdf1-4888-9a7c-55e9677944ba, 결과 개수=0
2025-06-20 00:38:29.018 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 2ms - result=ListN
2025-06-20 00:38:29.020 [http-nio-8080-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:38:29.020 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/yaml]
2025-06-20 00:38:29.021 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[]]
2025-06-20 00:38:29.022 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-20 00:38:31.333 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-20 00:38:31.398 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-20 00:38:31.402 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-20 00:38:31.403 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists binary_contents cascade 
2025-06-20 00:38:31.403 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists channels cascade 
2025-06-20 00:38:31.403 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists message_attachments cascade 
2025-06-20 00:38:31.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists messages cascade 
2025-06-20 00:38:31.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists read_statuses cascade 
2025-06-20 00:38:31.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_statuses cascade 
2025-06-20 00:38:31.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-06-20 00:38:31.406 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-20 00:38:31.406 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-06-20 00:38:31.407 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:discodeit user=SA: (connection evicted)
2025-06-20 00:38:31.408 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-06-20 00:38:31.408 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-20 00:38:33.894 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 27320 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:38:33.897 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:38:35.257 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:38:35.258 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:38:35.258 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:38:35.292 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:38:35.810 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-20 00:38:36.586 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:38:36.587 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:38:36.592 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:38:36.615 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:431)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 15 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:136)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:46)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:99)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:77)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:289)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	... 19 common frames omitted
2025-06-20 00:42:15.103 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 15932 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:42:15.104 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:42:16.398 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:42:16.399 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:42:16.399 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:42:16.451 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:42:16.957 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-20 00:42:17.708 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:42:17.710 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
2025-06-20 00:42:17.721 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-06-20 00:42:17.750 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1812)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.sprint.mission.discodeit.DiscodeitApplication.main(DiscodeitApplication.java:12)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:431)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	... 15 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing table [binary_contents]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:136)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:46)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:99)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:77)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:289)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:324)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:463)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1517)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	... 19 common frames omitted
2025-06-20 00:44:42.873 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Starting DiscodeitApplication using Java 17.0.14 with PID 25176 (C:\myWs\3-sprint-mission\build\classes\java\main started by PC_1M in C:\myWs\3-sprint-mission)
2025-06-20 00:44:42.875 [main] INFO  c.s.m.discodeit.DiscodeitApplication - The following 1 profile is active: "prod"
2025-06-20 00:44:44.006 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2025-06-20 00:44:44.007 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-20 00:44:44.007 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-06-20 00:44:44.049 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-20 00:44:44.608 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-20 00:44:46.633 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2025-06-20 00:44:46.651 [main] INFO  c.s.m.discodeit.DiscodeitApplication - Started DiscodeitApplication in 4.254 seconds (process running for 4.765)
2025-06-20 00:45:35.749 [http-nio-8081-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-20 00:45:54.897 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#create 시작 - args=[UserCreateRequest[username=조현아, email=h@gmail.com, password=1234], null]
2025-06-20 00:45:54.901 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#create 시작 - args=[UserCreateRequest[username=조현아, email=h@gmail.com, password=1234], Optional.empty]
2025-06-20 00:45:54.901 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicUserService - [user] 생성 요청: email=h@gmail.com, userName=조현아
2025-06-20 00:45:54.988 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicUserService - [user] 생성 완료: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, name=조현아, email=h@gmail.com, isProfile=false
2025-06-20 00:45:54.988 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#create 완료 - 87ms - result=UserDto
2025-06-20 00:45:55.003 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#create 완료 - 106ms - result=ResponseEntity
2025-06-20 00:45:55.028 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:45:55.022Z]]
2025-06-20 00:45:55.028 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:45:55.021Z]]
2025-06-20 00:45:55.028 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:45:55.021Z]]
2025-06-20 00:45:55.028 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:45:55.022Z]]
2025-06-20 00:45:55.029 [http-nio-8081-exec-9] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:45:55.022Z
2025-06-20 00:45:55.029 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:45:55.021Z
2025-06-20 00:45:55.044 [http-nio-8081-exec-9] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:45:55.022Z
2025-06-20 00:45:55.044 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:45:55.021Z
2025-06-20 00:45:55.044 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 16ms - result=UserStatusDto
2025-06-20 00:45:55.044 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 16ms - result=UserStatusDto
2025-06-20 00:45:55.050 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 22ms - result=ResponseEntity
2025-06-20 00:45:55.051 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 22ms - result=ResponseEntity
2025-06-20 00:45:55.054 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:45:55.055 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:45:55.055 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:45:55.065 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:45:55.065 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 10ms - result=ListN
2025-06-20 00:45:55.066 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 12ms - result=ResponseEntity
2025-06-20 00:45:55.082 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 시작 - args=[]
2025-06-20 00:45:55.083 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.083 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 시작 - args=[]
2025-06-20 00:45:55.083 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.083 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.084 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 요청
2025-06-20 00:45:55.084 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:45:55.085 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.095 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicUserService - [user] 전체 조회 응답: size=1
2025-06-20 00:45:55.096 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserService#findAll 완료 - 12ms - result=ListN
2025-06-20 00:45:55.097 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#findAll 완료 - 14ms - result=ResponseEntity
2025-06-20 00:45:55.100 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.101 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 17ms - result=ListN
2025-06-20 00:45:55.102 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 19ms - result=ResponseEntity
2025-06-20 00:45:55.106 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:45:55.119 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.120 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 35ms - result=ListN
2025-06-20 00:45:55.121 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 37ms - result=ResponseEntity
2025-06-20 00:45:55.130 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.132 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.132 [http-nio-8081-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:45:55.135 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.136 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.138 [http-nio-8081-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.138 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:45:55.139 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 9ms - result=ResponseEntity
2025-06-20 00:45:55.141 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:45:55.147 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.148 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.148 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:45:55.149 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.150 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 14ms - result=ListN
2025-06-20 00:45:55.152 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 17ms - result=ResponseEntity
2025-06-20 00:45:55.152 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.152 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:45:55.153 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:45:55.161 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.162 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:55.162 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:45:55.166 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:55.166 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:45:55.167 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:45:58.133 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:58.135 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:58.141 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:45:58.148 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:58.148 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 12ms - result=ListN
2025-06-20 00:45:58.149 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 15ms - result=ResponseEntity
2025-06-20 00:45:58.159 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:58.160 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:45:58.161 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:45:58.166 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:45:58.167 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:45:58.168 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 9ms - result=ResponseEntity
2025-06-20 00:46:01.136 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:01.138 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:01.143 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:01.148 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:01.148 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 9ms - result=ListN
2025-06-20 00:46:01.149 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:01.160 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:01.161 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:01.162 [http-nio-8081-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:01.167 [http-nio-8081-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:01.167 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:01.168 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:46:04.133 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:04.136 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:04.142 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:04.146 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:04.147 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 11ms - result=ListN
2025-06-20 00:46:04.148 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 15ms - result=ResponseEntity
2025-06-20 00:46:04.159 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:04.161 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:04.161 [http-nio-8081-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:04.166 [http-nio-8081-exec-2] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:04.167 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 6ms - result=ListN
2025-06-20 00:46:04.168 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:07.135 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:07.136 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:07.142 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:07.147 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:07.148 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 11ms - result=ListN
2025-06-20 00:46:07.148 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 12ms - result=ResponseEntity
2025-06-20 00:46:07.167 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:07.168 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:07.169 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:07.174 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:07.174 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:07.175 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:10.133 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:10.135 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:10.140 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:10.145 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:10.145 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 10ms - result=ListN
2025-06-20 00:46:10.146 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:10.157 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:10.158 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:10.159 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:10.164 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:10.164 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:10.165 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:12.501 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#create 시작 - args=[PublicChannelCreateRequest[name=채널1, description=asd]]
2025-06-20 00:46:12.503 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#create 시작 - args=[PublicChannelCreateRequest[name=채널1, description=asd]]
2025-06-20 00:46:12.503 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 생성 요청: name=채널1, description=asd
2025-06-20 00:46:12.510 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 저장 완료: id=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:12.535 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#create 완료 - 32ms - result=ChannelDto
2025-06-20 00:46:12.536 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#create 완료 - 34ms - result=ResponseEntity
2025-06-20 00:46:12.550 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:12.551 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:12.553 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:12.563 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:12.563 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 12ms - result=ListN
2025-06-20 00:46:12.564 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 14ms - result=ResponseEntity
2025-06-20 00:46:12.574 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:12.575 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:12.575 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:12.579 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:12.579 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:46:12.580 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:46:12.601 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.602 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.617 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:12.617 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:12.618 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 16ms - result=PageResponse
2025-06-20 00:46:12.618 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 17ms - result=ResponseEntity
2025-06-20 00:46:12.629 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.630 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.635 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:12.635 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:12.635 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 5ms - result=PageResponse
2025-06-20 00:46:12.636 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:46:12.953 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.955 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:12.968 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:12.969 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:12.969 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 14ms - result=PageResponse
2025-06-20 00:46:12.970 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 17ms - result=ResponseEntity
2025-06-20 00:46:13.132 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:13.133 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:13.135 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:13.145 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:13.145 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 12ms - result=ListN
2025-06-20 00:46:13.146 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 14ms - result=ResponseEntity
2025-06-20 00:46:13.154 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:13.154 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:13.155 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:13.158 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:13.158 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:46:13.159 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 5ms - result=ResponseEntity
2025-06-20 00:46:13.278 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.279 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.281 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:13.281 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:13.281 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 2ms - result=PageResponse
2025-06-20 00:46:13.282 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 4ms - result=ResponseEntity
2025-06-20 00:46:13.594 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.595 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.604 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:13.605 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:13.605 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 10ms - result=PageResponse
2025-06-20 00:46:13.606 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 12ms - result=ResponseEntity
2025-06-20 00:46:13.918 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.919 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:13.929 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:13.929 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:13.929 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 9ms - result=PageResponse
2025-06-20 00:46:13.930 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 11ms - result=ResponseEntity
2025-06-20 00:46:14.244 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.246 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.256 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:14.256 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:14.257 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 11ms - result=PageResponse
2025-06-20 00:46:14.258 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:14.573 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.575 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.585 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:14.585 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:14.585 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 10ms - result=PageResponse
2025-06-20 00:46:14.586 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:14.903 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.904 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:14.914 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:14.914 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:14.914 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 10ms - result=PageResponse
2025-06-20 00:46:14.916 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:15.228 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.230 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.239 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:15.239 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:15.239 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 9ms - result=PageResponse
2025-06-20 00:46:15.240 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 11ms - result=ResponseEntity
2025-06-20 00:46:15.554 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.557 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.567 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:15.568 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:15.568 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 11ms - result=PageResponse
2025-06-20 00:46:15.569 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 15ms - result=ResponseEntity
2025-06-20 00:46:15.888 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.890 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:15.899 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:15.899 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:15.899 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 9ms - result=PageResponse
2025-06-20 00:46:15.900 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 11ms - result=ResponseEntity
2025-06-20 00:46:16.134 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:16.135 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:16.137 [http-nio-8081-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=0
2025-06-20 00:46:16.140 [http-nio-8081-exec-3] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:16.140 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:16.141 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 7ms - result=ResponseEntity
2025-06-20 00:46:16.145 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:16.145 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:16.145 [http-nio-8081-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:16.148 [http-nio-8081-exec-8] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=0
2025-06-20 00:46:16.148 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 3ms - result=ListN
2025-06-20 00:46:16.148 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 3ms - result=ResponseEntity
2025-06-20 00:46:16.217 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.217 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.227 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:16.227 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:16.227 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 9ms - result=PageResponse
2025-06-20 00:46:16.228 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 11ms - result=ResponseEntity
2025-06-20 00:46:16.544 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.545 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.553 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=0
2025-06-20 00:46:16.554 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=0, nextCursor=null
2025-06-20 00:46:16.554 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 9ms - result=PageResponse
2025-06-20 00:46:16.555 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 10ms - result=ResponseEntity
2025-06-20 00:46:16.719 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=1, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:16.723 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=1, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:16.723 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:16.752 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=92674d18-046a-41c6-9cf1-effa6cde8be5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:16.752 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 29ms - result=MessageDto
2025-06-20 00:46:16.778 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 57ms - result=ResponseEntity
2025-06-20 00:46:16.794 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#create 시작 - args=[ReadStatusCreateRequest[userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, lastReadAt=2025-06-19T15:46:16.789Z]]
2025-06-20 00:46:16.794 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#create 시작 - args=[ReadStatusCreateRequest[userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, lastReadAt=2025-06-19T15:46:16.789Z]]
2025-06-20 00:46:16.794 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 생성 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:16.806 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 생성 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, lastReadAt=2025-06-19T15:46:16.789Z
2025-06-20 00:46:16.806 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#create 완료 - 12ms - result=ReadStatusDto
2025-06-20 00:46:16.809 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#create 완료 - 15ms - result=ResponseEntity
2025-06-20 00:46:16.865 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.865 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:16.881 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=1
2025-06-20 00:46:16.881 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=1, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:16.881 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 16ms - result=PageResponse
2025-06-20 00:46:16.882 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 17ms - result=ResponseEntity
2025-06-20 00:46:17.351 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:17.353 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:17.367 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=1
2025-06-20 00:46:17.367 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=1, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:17.367 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 14ms - result=PageResponse
2025-06-20 00:46:17.368 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 16ms - result=ResponseEntity
2025-06-20 00:46:18.058 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:18.059 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:18.080 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=1
2025-06-20 00:46:18.081 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=1, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:18.081 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 21ms - result=PageResponse
2025-06-20 00:46:18.082 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 24ms - result=ResponseEntity
2025-06-20 00:46:18.550 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=2, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:18.552 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=2, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:18.552 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:18.559 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=76d47cae-f690-4757-bb9e-ddbacc79e297, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:18.560 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 7ms - result=MessageDto
2025-06-20 00:46:18.565 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 15ms - result=ResponseEntity
2025-06-20 00:46:18.578 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:18.569Z]]
2025-06-20 00:46:18.579 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:18.569Z]]
2025-06-20 00:46:18.579 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:18.584 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:18.569Z, allied=2025-06-19T15:46:18.569Z
2025-06-20 00:46:18.584 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 5ms - result=ReadStatusDto
2025-06-20 00:46:18.588 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 10ms - result=ResponseEntity
2025-06-20 00:46:18.829 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=3, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:18.830 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=3, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:18.830 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:18.833 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=1c6ec48f-b09f-4f1f-9983-246e33cc5167, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:18.833 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 3ms - result=MessageDto
2025-06-20 00:46:18.835 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 6ms - result=ResponseEntity
2025-06-20 00:46:18.840 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:18.838Z]]
2025-06-20 00:46:18.840 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:18.838Z]]
2025-06-20 00:46:18.840 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:18.841 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:18.838Z, allied=2025-06-19T15:46:18.838Z
2025-06-20 00:46:18.841 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 1ms - result=ReadStatusDto
2025-06-20 00:46:18.842 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 2ms - result=ResponseEntity
2025-06-20 00:46:19.106 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:19.107 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:19.132 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:19.132 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:19.136 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=3
2025-06-20 00:46:19.136 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=3, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:19.137 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 28ms - result=PageResponse
2025-06-20 00:46:19.137 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:19.138 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 31ms - result=ResponseEntity
2025-06-20 00:46:19.155 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:19.155 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 23ms - result=ListN
2025-06-20 00:46:19.156 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 24ms - result=ResponseEntity
2025-06-20 00:46:19.165 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:19.166 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:19.166 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:19.171 [http-nio-8081-exec-7] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:19.171 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:19.172 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:46:19.294 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=4, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:19.294 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=4, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:19.294 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:19.301 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=b04c0fb5-d89f-4fa0-86af-c6c7aae8ebb5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:19.302 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 8ms - result=MessageDto
2025-06-20 00:46:19.307 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 13ms - result=ResponseEntity
2025-06-20 00:46:19.316 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:19.311Z]]
2025-06-20 00:46:19.317 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:19.311Z]]
2025-06-20 00:46:19.317 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:19.321 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:19.311Z, allied=2025-06-19T15:46:19.311Z
2025-06-20 00:46:19.321 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 4ms - result=ReadStatusDto
2025-06-20 00:46:19.327 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 10ms - result=ResponseEntity
2025-06-20 00:46:20.679 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:20.681 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:20.696 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=4
2025-06-20 00:46:20.696 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=4, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:20.696 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 15ms - result=PageResponse
2025-06-20 00:46:20.697 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 18ms - result=ResponseEntity
2025-06-20 00:46:21.237 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=5, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:21.239 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=5, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:21.239 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:21.247 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=b20bb157-f56b-4269-baa3-7784b531f77d, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:21.248 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 8ms - result=MessageDto
2025-06-20 00:46:21.252 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 15ms - result=ResponseEntity
2025-06-20 00:46:21.261 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:21.256Z]]
2025-06-20 00:46:21.262 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:21.256Z]]
2025-06-20 00:46:21.262 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:21.266 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:21.256Z, allied=2025-06-19T15:46:21.256Z
2025-06-20 00:46:21.266 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 4ms - result=ReadStatusDto
2025-06-20 00:46:21.270 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:22.132 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:22.134 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:22.138 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:22.152 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:22.152 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 18ms - result=ListN
2025-06-20 00:46:22.153 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 21ms - result=ResponseEntity
2025-06-20 00:46:22.163 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:22.164 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:22.164 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:22.169 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:22.169 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:22.170 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:46:22.517 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=6, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:22.518 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=6, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:22.518 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:22.525 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=c62cd49a-32ac-4cc4-bc15-77a019a48a84, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:22.569 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 51ms - result=MessageDto
2025-06-20 00:46:22.575 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 58ms - result=ResponseEntity
2025-06-20 00:46:22.588 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:22.583Z]]
2025-06-20 00:46:22.589 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:22.583Z]]
2025-06-20 00:46:22.589 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:22.592 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:22.583Z, allied=2025-06-19T15:46:22.583Z
2025-06-20 00:46:22.592 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 3ms - result=ReadStatusDto
2025-06-20 00:46:22.596 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:22.965 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=7, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:22.966 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=7, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:22.966 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:22.972 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=4d238d26-ca71-4dca-b305-670af03ba70e, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:22.972 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 6ms - result=MessageDto
2025-06-20 00:46:22.979 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 14ms - result=ResponseEntity
2025-06-20 00:46:22.989 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:22.984Z]]
2025-06-20 00:46:22.989 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:22.984Z]]
2025-06-20 00:46:22.989 [http-nio-8081-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:22.990 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:22.991 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:22.993 [http-nio-8081-exec-1] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:22.984Z, allied=2025-06-19T15:46:22.984Z
2025-06-20 00:46:22.993 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 4ms - result=ReadStatusDto
2025-06-20 00:46:22.997 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:23.007 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=7
2025-06-20 00:46:23.008 [http-nio-8081-exec-10] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=7, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:23.008 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 17ms - result=PageResponse
2025-06-20 00:46:23.009 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 19ms - result=ResponseEntity
2025-06-20 00:46:23.445 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=8, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:23.447 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=8, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:23.447 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:23.456 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=5ab9f6d5-bfb4-453c-9948-a67e2cfe82b5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:23.456 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 9ms - result=MessageDto
2025-06-20 00:46:23.464 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 19ms - result=ResponseEntity
2025-06-20 00:46:23.474 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:23.468Z]]
2025-06-20 00:46:23.474 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:23.468Z]]
2025-06-20 00:46:23.474 [http-nio-8081-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:23.478 [http-nio-8081-exec-6] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:23.468Z, allied=2025-06-19T15:46:23.468Z
2025-06-20 00:46:23.478 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 4ms - result=ReadStatusDto
2025-06-20 00:46:23.482 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:25.040 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:46:25.034Z]]
2025-06-20 00:46:25.042 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75, UserStatusUpdateRequest[newLastActiveAt=2025-06-19T15:46:25.034Z]]
2025-06-20 00:46:25.042 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:46:25.034Z
2025-06-20 00:46:25.047 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicUserStatusService - [readStatus] 업데이트 완료: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, newLastActiveAt=2025-06-19T15:46:25.034Z
2025-06-20 00:46:25.047 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicUserStatusService#updateByUserId 완료 - 5ms - result=UserStatusDto
2025-06-20 00:46:25.051 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] UserController#updateUserStatusByUserId 완료 - 11ms - result=ResponseEntity
2025-06-20 00:46:25.134 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:25.134 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:25.140 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:25.153 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:25.153 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 19ms - result=ListN
2025-06-20 00:46:25.154 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 20ms - result=ResponseEntity
2025-06-20 00:46:25.163 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:25.164 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:25.164 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:25.169 [http-nio-8081-exec-4] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:25.169 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:25.170 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:46:25.601 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 시작 - args=[MessageCreateRequest[content=9, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], null]
2025-06-20 00:46:25.602 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 시작 - args=[MessageCreateRequest[content=9, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75], []]
2025-06-20 00:46:25.602 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 요청: authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:25.607 [http-nio-8081-exec-9] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 생성 완료: messageId=7c8ac7f8-bafd-4fe8-9faa-074ebaff4c37, authorId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, channelId=e69d3793-37c3-48c9-a652-70ad20223cc5
2025-06-20 00:46:25.607 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#create 완료 - 5ms - result=MessageDto
2025-06-20 00:46:25.612 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#create 완료 - 10ms - result=ResponseEntity
2025-06-20 00:46:25.621 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:25.617Z]]
2025-06-20 00:46:25.623 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 시작 - args=[56ce7f99-e640-403f-b54e-a587b37f263c, ReadStatusUpdateRequest[newLastReadAt=2025-06-19T15:46:25.617Z]]
2025-06-20 00:46:25.623 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 요청: id=56ce7f99-e640-403f-b54e-a587b37f263c
2025-06-20 00:46:25.626 [http-nio-8081-exec-5] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 업데이트 완료: readStatusId=56ce7f99-e640-403f-b54e-a587b37f263c, requested=2025-06-19T15:46:25.617Z, allied=2025-06-19T15:46:25.617Z
2025-06-20 00:46:25.626 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#update 완료 - 3ms - result=ReadStatusDto
2025-06-20 00:46:25.630 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#update 완료 - 8ms - result=ResponseEntity
2025-06-20 00:46:26.025 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:26.026 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:26.041 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=9
2025-06-20 00:46:26.041 [http-nio-8081-exec-7] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=9, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:26.041 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 15ms - result=PageResponse
2025-06-20 00:46:26.042 [http-nio-8081-exec-7] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 17ms - result=ResponseEntity
2025-06-20 00:46:28.133 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:28.134 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:28.140 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:28.155 [http-nio-8081-exec-1] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:28.155 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 21ms - result=ListN
2025-06-20 00:46:28.156 [http-nio-8081-exec-1] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 23ms - result=ResponseEntity
2025-06-20 00:46:28.165 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:28.166 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:28.166 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:28.171 [http-nio-8081-exec-10] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:28.171 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 5ms - result=ListN
2025-06-20 00:46:28.172 [http-nio-8081-exec-10] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 7ms - result=ResponseEntity
2025-06-20 00:46:29.057 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:29.059 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:29.076 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=9
2025-06-20 00:46:29.077 [http-nio-8081-exec-2] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=9, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:29.077 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 18ms - result=PageResponse
2025-06-20 00:46:29.078 [http-nio-8081-exec-2] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 21ms - result=ResponseEntity
2025-06-20 00:46:31.146 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:31.147 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:31.151 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:31.165 [http-nio-8081-exec-6] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:31.165 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 18ms - result=ListN
2025-06-20 00:46:31.166 [http-nio-8081-exec-6] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 20ms - result=ResponseEntity
2025-06-20 00:46:31.175 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:31.177 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:31.177 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:31.181 [http-nio-8081-exec-3] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:31.181 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:46:31.182 [http-nio-8081-exec-3] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:46:32.100 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:32.102 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:32.116 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=9
2025-06-20 00:46:32.116 [http-nio-8081-exec-8] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=9, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:32.116 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 14ms - result=PageResponse
2025-06-20 00:46:32.117 [http-nio-8081-exec-8] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 16ms - result=ResponseEntity
2025-06-20 00:46:34.138 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:34.139 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:34.146 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, size=1
2025-06-20 00:46:34.158 [http-nio-8081-exec-4] INFO  c.s.m.d.s.basic.BasicChannelService - [channel] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:34.158 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicChannelService#findAllByUserId 완료 - 18ms - result=ListN
2025-06-20 00:46:34.159 [http-nio-8081-exec-4] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ChannelController#findAll 완료 - 21ms - result=ResponseEntity
2025-06-20 00:46:34.170 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:34.171 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 시작 - args=[90df7561-3aa9-4e4b-b8dd-b46d201a4b75]
2025-06-20 00:46:34.171 [http-nio-8081-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 요청: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75
2025-06-20 00:46:34.175 [http-nio-8081-exec-9] INFO  c.s.m.d.s.b.BasicReadStatusService - [readStatus] 전체 조회 응답: userId=90df7561-3aa9-4e4b-b8dd-b46d201a4b75, 결과 개수=1
2025-06-20 00:46:34.175 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicReadStatusService#findAllByUserId 완료 - 4ms - result=ListN
2025-06-20 00:46:34.176 [http-nio-8081-exec-9] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] ReadStatusController#findAllByUserId 완료 - 6ms - result=ResponseEntity
2025-06-20 00:46:35.135 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:35.136 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 시작 - args=[e69d3793-37c3-48c9-a652-70ad20223cc5, null, Page request [number: 0, size 50, sort: createdAt: DESC]]
2025-06-20 00:46:35.153 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 요청: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, size=9
2025-06-20 00:46:35.153 [http-nio-8081-exec-5] INFO  c.s.m.d.s.basic.BasicMessageService - [message] 전체 조회 응답: channelId=e69d3793-37c3-48c9-a652-70ad20223cc5, 결과 개수=9, nextCursor=2025-06-19T15:46:16.738015Z
2025-06-20 00:46:35.153 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Service] BasicMessageService#findAllByChannelId 완료 - 16ms - result=PageResponse
2025-06-20 00:46:35.154 [http-nio-8081-exec-5] INFO  c.s.m.discodeit.config.LoggingAspect - [Controller] MessageController#findAllByChannelId 완료 - 19ms - result=ResponseEntity
