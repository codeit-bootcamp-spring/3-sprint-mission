#spring.application.name=discodeit
discodeit:
  storage:
    type: local
    local:
      root-path: ./storage
    repository:
      file-directory: .discodeit

server:
  port: 8080

logging:
  level:
    root:
      info

spring:
  application:
    name: discodeit
  servlet:
    multipart:
      maxFileSize: 10MB # 파일 하나의 최대 크기
      maxRequestSize: 30MB  # 한 번에 최대 업로드 가능 용량
  profiles:
    active: prod
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit
    username: discodeit_user
    password: discodeit1234
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        ddl-auto: update
        show_sql: false
    open-in-view: false

# Spring Boot Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, loggers
        # 모든 엔드포인트 노출 (개발 환경용)
        # include: "*"
      base-path: /actuator  # Actuator 엔드포인트 기본 경로
  endpoint:
    health:
      show-details: always

# 애플리케이션 정보 (Actuator info 엔드포인트용)
info:
  app:
    name: Discodeit
    description: 디스코드잇 채팅 서비스
    version: 1.7.0
    encoding: UTF-8
    java:
      version: 17
    springboot:
      version: 3.4.0
    config:
      datasource:
        url: ${spring.datasource.url}
        driver-class-name: ${spring.datasource.driver-class-name}
      jpa:
        ddl-auto: ${spring.jpa.hibernate.ddl-auto}
      storage:
        type: ${discodeit.storage.type}
        path: ${discodeit.storage.local.root-path}
      multipart:
        max-file-size: ${spring.servlet.multipart.maxFileSize}
        max-request-size: ${spring.servlet.multipart.maxRequestSize}

  build:
    artifact: chap01-spring-stability
    group: com.ohgiraffers.stability
    time: 2024-01-01T00:00:00.000Z

jdbc:
  time_zone: UTC

springdoc:
  api-docs:
    # OpenAPI 명세서 경로(JSON) -> 기억해두자!!! 미션 때 써먹어야됨.
    #    path: /hi/my/name/is
    path: /v3/api-docs
    title:
  swagger-ui:
    # Swagger-ui 경로(HTML)
    path: /my-swagger-ui.html
    # API 정렬 기준 - HTTP 메서드의 알파벳순
    operations-sorter: method