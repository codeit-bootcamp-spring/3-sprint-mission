version: '3.8'

services:
  # Spring Boot 애플리케이션 서비스
  app:
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    build:
      context: .
      dockerfile: Dockerfile
    image: discodeit-app:local
    container_name: discodeit-app
    ports:
      - "8081:80"
    env_file: .env
    environment:
      # Spring Boot 설정
      SPRING_PROFILES_ACTIVE: prod

      # 데이터베이스 연결 설정
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      # AWS S3 설정
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      STORAGE_TYPE: ${STORAGE_TYPE}
      AWS_S3_PRESIGNED_URL_EXPIRATION: ${AWS_S3_PRESIGNED_URL_EXPIRATION}
      STORAGE_LOCAL_ROOT_PATH: ${STORAGE_LOCAL_ROOT_PATH:-/app/storage}

      # JVM 설정
      JVM_OPTS: ${JVM_OPTS:-}
    volumes:
      - app_storage:/app/.storage
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - discodeit-network

  postgres:
    image: postgres:17-alpine
    container_name: discodeit-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: "Asia/Seoul"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

    ports:
      - "54321:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - discodeit-network

volumes:
  postgres_data:
    driver: local

  app_storage:
    driver: local

networks:
  discodeit-network:
    driver: bridge