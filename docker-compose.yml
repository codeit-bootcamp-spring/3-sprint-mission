version: '3.8'

# 서비스 정의
services:
  postgres:
    image: postgres:17-alpine
    container_name: discodeit-db
    restart: unless-stopped

    # 환경변수 설정
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: "Asia/Seoul"

    # 포트 매핑
    ports:
      - "${POSTGRES_PORT}:5432"

    # 볼륨 마운트 (데이터 영속화)
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: discodeit-app:local-slim
    container_name: discodeit_app
    env_file: .env
    # 환경 변수 설정
    environment:
      # STORAGE 설정
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      STORAGE_LOCAL_ROOT_PATH: ${STORAGE_LOCAL_ROOT_PATH}

      # AWS S3 설정
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_PRESIGNED_URL_EXPIRATION: ${AWS_S3_PRESIGNED_URL_EXPIRATION:-600}

      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      DISCODEIT_STORAGE_LOCAL_ROOT_PATH: /app/binary_content_storage

    depends_on:
      postgres:
        condition: service_healthy

    volumes:
      - app_data:/app/binary_content_storage

    ports:
      - "${APP_PORT}:80"

volumes:
  postgres_data:
  app_data: